trigger:
- main

variables:
  dockerRegistryServiceConnection: 'myacrcred'  # The service connection name for ACR
  imageRepository: 'winapp/caliiis'
  containerRegistry: 'aksdevopsacr.azurecr.io'  # Your ACR URL
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  manifestsPath: 'kubernetes.yml'
  k8sServiceConnection: 'myakscred' 
  tag: '$(Build.BuildId)'
  pool:
  vmImage: 'windows-latest'

stages:
- stage: BuildAndPush
  displayName: Build and Push Docker Image
  jobs:
  - job: Build
    displayName: Build and Push Docker Image to ACR
    steps:
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    - bash: |
        echo "Contents in System Default Working Directory"; ls -R $(System.DefaultWorkingDirectory)
        echo "Before copying Contents in Build Artifact Directory"; ls -R $(Build.ArtifactStagingDirectory)
      displayName: 'Debug Variables'
       ## Publish Artifacts pipeline code in addition to Build and Push          
    - bash: echo Contents in System Default Working Directory; ls -R $(System.DefaultWorkingDirectory)        
    - bash: echo Before copying Contents in Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)        
    # Task-2: Copy files (Copy files from a source folder to target folder)
    # Source Directory: $(System.DefaultWorkingDirectory)/kube-manifests
    # Target Directory: $(Build.ArtifactStagingDirectory)
      
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: 'kubernetes.yml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        OverWrite: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'kube-manifest'
        publishLocation: 'Container'

- stage: DeployToAKS
  displayName: Deploy to AKS
  dependsOn: BuildAndPush
  jobs:
  - job: Deploy
    displayName: Deploy to AKS using Kubernetes Manifests
    steps:
    - checkout: self
    - bash: |
        echo "Container Registry: $(containerRegistry)"
        echo "Image Repository: $(imageRepository)"
        echo "Tag: $(tag)"
      displayName: 'Debug Variables'
     
    - task: KubernetesManifest@1
      inputs:
        action: 'deploy'
        connectionType: 'kubernetesServiceConnection'
        kubernetesServiceConnection: 'myakscred'
        namespace: 'default'
        manifests: '$(System.DefaultWorkingDirectory)/kubernetes.yml'
        containers: 'kiranacrdevops.azurecr.io/winapp/caliiis:$(Build.BuildId)'
        imagePullSecrets: 'acrpullapp1'
